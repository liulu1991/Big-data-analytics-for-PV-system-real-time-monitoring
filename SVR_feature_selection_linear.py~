from sklearn.svm import SVR
from sklearn import datasets
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn import metrics
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.feature_selection import RFE

dataset = pd.read_csv('weather_pv_2017_without_time.csv',sep=',')
#dataset = pd.read_csv('weather_pv_2017dot.csv',sep=',', dtype={'WindSpeed':np.float64})   #not working
new_dataset = dataset.convert_objects(convert_numeric=True)
#pd.to_numeric(dataset['WindSpeed'],errors='ignore')         #not working
print(new_dataset.dtypes)

"""
Standardization
"""

scaler = StandardScaler()
print(scaler.fit(new_dataset))
print(scaler.transform(new_dataset))


X = new_dataset[['WindSpeed','Sunshine','AirPressure','Radiation','AirTemperature','RelativeAirHumidity']]
y = new_dataset['SystemProduction']

estimator = SVR(kernel='linear')
selector = RFE(estimator, 1, step=1) 
selector = selector.fit(X,y)
print (selector.support_)
print (selector.ranking_)


#print ("MSE:", metrics.mean_squared_error(y_test, y_pred))

#print ("RMSE:", np.sqrt(metrics.mean_squared_error(y_test, y_pred)))

